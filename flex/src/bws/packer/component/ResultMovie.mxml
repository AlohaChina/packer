<?xml version="1.0" encoding="utf-8"?>
<ui:VGroup xmlns:fx="http://ns.adobe.com/mxml/2009" 
		   xmlns:s="library://ns.adobe.com/flex/spark" 
		   xmlns:mx="library://ns.adobe.com/flex/mx" 
		   xmlns:ui="org.samchon.library.ui.*" 
		   xmlns:menu="org.samchon.protocol.movie.menu.*">
	<fx:Declarations>
		<!-- Place non-visual elements (e.g., services, value objects) here -->
	</fx:Declarations>
	<fx:Script>
		<![CDATA[
			import bws.packer.entity.Wrap;
			import bws.packer.entity.Wrapper;
			import bws.packer.entity.WrapperArray;
			
			import mx.controls.Alert;
			import mx.events.ListEvent;
			import mx.managers.PopUpManager;
			
			import org.samchon.protocol.invoke.Invoke;
			
			import spark.formatters.NumberFormatter;
			
			public var application:index;
			
			[Bindable]public var wrapperArray:WrapperArray = new WrapperArray();
			
			/* ----------------------------------------------------
				INTERACTION WITH JAVASCRIPT, THE 3D LIBRARY
			---------------------------------------------------- */
			protected function printWrapper(wrapperIndex:int, size:int):void
			{
				ExternalInterface.call("bws.packer.drawWrapper", wrapperIndex, size);
			}
			
			protected function changeWrapper(event:ListEvent):void
			{
				// TODO Auto-generated method stub
				var wrapper:Wrapper = wrapperGrid.selectedItem as Wrapper;
				if (wrapper == null)
					return;
				
				printWrapper(wrapperGrid.selectedIndex, wrapper.length);
			}
			
			protected function changeWrap(event:ListEvent):void
			{
				// TODO Auto-generated method stub
				var wrapper:Wrapper = wrapperGrid.selectedItem as Wrapper;
				var wrap:Wrap = wrapGrid.selectedItem as Wrap;
				
				if (wrapper == null || wrap == null)
					return;
				
				printWrapper(wrapperGrid.selectedIndex, wrapGrid.selectedIndex + 1);
			}
			
			/* ----------------------------------------------------
			FILE I/O
			---------------------------------------------------- */
			protected function newFile(event:MouseEvent):void
			{
				this.wrapperArray.removeAll();
			}
			
			protected function openFile(event:MouseEvent):void
			{
				var fileReference:FileReference = new FileReference();
				fileReference.addEventListener
					(
						Event.SELECT,
						function (event:Event):void
						{
							fileReference.load();
						}
					);
				fileReference.addEventListener
					(
						Event.COMPLETE,
						function (event:Event):void
						{
							try
							{
								var str:String = fileReference.data.readUTFBytes(fileReference.data.bytesAvailable);
								var xml:XML = new XML(str);
								
								setWrapperArray(xml);
							}
							catch (error:Error)
							{
								Alert.show("Invalid XML format.", "File Error");
							}
						}
					);
				
				fileReference.browse([new FileFilter("XML file only", "*.xml")]);
			}
			
			protected function saveFile(event:MouseEvent):void
			{
				var fileReference:FileReference = new FileReference();
				fileReference.save
					(
						wrapperArray.toXML(),
						"packer_result.xml"
					);
			}
			
			/* ----------------------------------------------------
				MESSAGE CHAIN
			---------------------------------------------------- */
			public function sendData(invoke:Invoke):void
			{
				application.sendData(invoke);
			}
			
			public function replyData(invoke:Invoke):void
			{
				// NOTHING TO DO
				if (invoke.getListener() == "setWrapperArray")
				{
					setWrapperArray(invoke.at(0).getValue());
				}
			}
			
			protected function setWrapperArray(xml:XML):void
			{
				application.tabNavigator.selectedIndex = 1;
			
				// SET WRAPPERS AND PRINTS
				wrapperArray.construct(xml);
				ExternalInterface.call("bws.packer.setWrapperArray", xml.toXMLString());
				
				application.parameterMovie.enabled = true;
				
				// RESULT AS TEXTS
				var costFormatter:NumberFormatter = new NumberFormatter();
				costFormatter.useGrouping = true;
				costFormatter.fractionalDigits = 0;
				
				var percentFormatter:NumberFormatter = new NumberFormatter();
				percentFormatter.fractionalDigits = 2;
				
				costLabel.text = "Cost: $" + costFormatter.format(wrapperArray.getPrice()) + "";
				utilizationLabel.text = "Space utilization: " + percentFormatter.format(wrapperArray.getUtilization() * 100.0) + " %";
			}
			
		]]>
	</fx:Script>
	
	<!--
	==============================================
		포장지 목록 -> Wrappers in an WrapperArray
	==============================================
	-->
	<s:HGroup>
		<menu:MenuButton label="New File" 
						 image="assets/buttons/newFile.png" 
						 click="newFile(event)" />
		<menu:MenuButton label="Open File" 
						 image="assets/buttons/openFile.png" 
						 click="openFile(event)" />
		<menu:MenuButton label="Save File" 
						 image="assets/buttons/saveFile.png" 
						 click="saveFile(event)" />
	</s:HGroup>
	
	<mx:HRule width="100%" />
	
	<s:Label text="Optimization Result" />
	<s:VGroup width="100%" paddingLeft="15">
		<s:Label id="costLabel" 
				 text="Cost: $" />
		<s:Label id="utilizationLabel" 
				 text="Space utilization: %" />
	</s:VGroup>
	
	<mx:HRule width="100%" />
	
	<s:Label text="List of Wrappers" />
	
	<mx:DataGrid id="wrapperGrid"  
				 dataProvider="{wrapperArray}" 
				 change="changeWrapper(event)"
				 sortableColumns="false"
				 width="100%" height="100%">
		<mx:columns>
			<mx:DataGridColumn headerText="Name" 
							   dataField="name" />
			<mx:DataGridColumn headerText="Scale" 
							   dataField="scale" />
			<mx:DataGridColumn headerText="Space Utilization"
							   dataField="utilization" 
							   itemRenderer="bws.packer.component.grid.SpaceUtilizationColumn" />
		</mx:columns>
	</mx:DataGrid>
	
	<mx:HRule width="100%" />
	
	<!--
	==============================================
		포장지 내 제품의 포장 정보 -> Wraps in an Wrapper
	==============================================
	-->
	<s:Label text="Instances in a Wrapper" />
	<mx:DataGrid id="wrapGrid" 
				 dataProvider="{wrapperGrid.selectedItem}"
				 change="changeWrap(event)"
				 sortableColumns="false"
				 width="100%" height="100%">
		<mx:columns>
			<mx:DataGridColumn headerText="Name" 
							   dataField="name" />
			<mx:DataGridColumn headerText="Layout Scale"
							   dataField="scale" />
			<mx:DataGridColumn headerText="Position"
							   dataField="position" />
		</mx:columns>
	</mx:DataGrid>
	
</ui:VGroup>
